TODO:
- Menu
- Gitignore
- Mine explosions should use a frame animation type of system
- Memoryleaks
- Properly get rid of bullets instead of setting their position to out of the game (which is obviously just a temporarily solution).
- Remove bullets from Game::allBullets when they exploded.
- Create public class 'Unit' for classes Player and Enemy for shared functionalities.
- Implement a method to identify enemies (guids held in database perhaps?) so we can properly reduce bullet count when a bullet is shot.
- Add a database to the system that comes with the game. This means you can't install the game if you're not going to create the database (that comes with it) too, though.
  * Table for bullet types with BMP filename of image, speed, lifes, etc.
  * Respective tables for enemies and players including guid, speed, bulletcount, BMP filename of image (model), etc.
  * Table for all objects (walls, for example).
- Instead of having one player at the time, allow the possibility of playing multiplayer (1 versus 1, 2 versus NPCs, etc.).
- Level design storing in XML.
- Placement of pushing away code is incorrect.
- Use a library like box2D for physics and pushing away logic improvements.
- When a player moves into a corner it should take in consideration both walls, not just one.

DONE:
- Figure out why distance check for landmine explosions isn't working (the 2D distance formula should work...)
- Figure out issues with collision on some of the walls. Possible cause might be that we stop iterating over walls when we found a collision.
- Translate all Dutch comments into English.
- Add else-if check to movement so pressing W and S at the same time doesn't work anymore.
- When a player runs into an enemy or the other way around, they should push each other away.
  * Stop movement when both parties (enemy and player) are both moving right into each other.
  * Run a check if the new position of the enemy won't be inside a wall.
    > [Can't place this check in Enemy::SetPosX/Y because we need to know whether we substract or add co-ordinates to the movement position in order to then do the opposite in order to move out of the wall/etc.
  * Remember to also add this functionality to the Enemy class for when a player tank is on their waypoint path.
  * Also add this functionality between enemies.
- Update wall logic to store all walls that are in a line (horizontal AND vertical respectively) in one image for collision (bullet and movement).